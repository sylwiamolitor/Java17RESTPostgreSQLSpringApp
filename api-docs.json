{
  "components": {
    "schemas": {
      "AbstractJsonSchemaPropertyObject": {
        "properties": {
          "readOnly": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EntityModelStudent": {
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/Links"
          },
          "age": {
            "format": "int32",
            "type": "integer"
          },
          "country": {
            "type": "string"
          },
          "dateOfBirth": {
            "format": "date",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Item": {
        "properties": {
          "properties": {
            "additionalProperties": {
              "$ref": "#/components/schemas/AbstractJsonSchemaPropertyObject"
            },
            "type": "object"
          },
          "requiredProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "JsonSchema": {
        "properties": {
          "$schema": {
            "type": "string"
          },
          "definitions": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Item"
            },
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "properties": {
            "additionalProperties": {
              "$ref": "#/components/schemas/AbstractJsonSchemaPropertyObject"
            },
            "type": "object"
          },
          "requiredProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Link": {
        "properties": {
          "deprecation": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "hreflang": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "profile": {
            "type": "string"
          },
          "templated": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Links": {
        "additionalProperties": {
          "$ref": "#/components/schemas/Link"
        },
        "type": "object"
      },
      "PagedModelEntityModelStudent": {
        "properties": {
          "_embedded": {
            "properties": {
              "students": {
                "items": {
                  "$ref": "#/components/schemas/EntityModelStudent"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        },
        "type": "object"
      },
      "PageMetadata": {
        "properties": {
          "number": {
            "format": "int64",
            "type": "integer"
          },
          "size": {
            "format": "int64",
            "type": "integer"
          },
          "totalElements": {
            "format": "int64",
            "type": "integer"
          },
          "totalPages": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RegionAndSubregionDTO": {
        "properties": {
          "region": {
            "type": "string"
          },
          "subregion": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RepresentationModelObject": {
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        },
        "type": "object"
      },
      "Student": {
        "properties": {
          "age": {
            "format": "int32",
            "type": "integer"
          },
          "country": {
            "type": "string"
          },
          "dateOfBirth": {
            "format": "date",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "lastName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "StudentDTO": {
        "properties": {
          "age": {
            "format": "int32",
            "type": "integer"
          },
          "country": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "StudentRequestBody": {
        "properties": {
          "age": {
            "format": "int32",
            "type": "integer"
          },
          "country": {
            "type": "string"
          },
          "dateOfBirth": {
            "format": "date",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "lastName": {
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/api/v1/student": {
      "get": {
        "operationId": "getStudents",
        "responses": {
          "200": {
            "content": {
              "application/hal+json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/StudentDTO"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Method for getting all students in database",
        "tags": [
          "Operations on students"
        ]
      }
    },
    "/api/v1/student/{email}": {
      "get": {
        "operationId": "getStudentByEmail",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentDTO"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Method for getting one student by his/her email address",
        "tags": [
          "Operations on students"
        ]
      }
    },
    "/api/v1/student/{studentId}": {
      "delete": {
        "operationId": "deleteStudent",
        "parameters": [
          {
            "in": "path",
            "name": "studentId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Method for deleting student by his/her ID",
        "tags": [
          "Operations on students"
        ]
      },
      "put": {
        "operationId": "updateStudent",
        "parameters": [
          {
            "in": "path",
            "name": "studentId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "firstName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lastName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "dateOfBirth",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "country",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Method for updating students",
        "tags": [
          "Operations on students"
        ]
      }
    },
    "/api/v1/student/addStudent": {
      "post": {
        "operationId": "addStudent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Student"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Method for adding students",
        "tags": [
          "Operations on students"
        ]
      }
    },
    "/api/v1/student/id/{id}": {
      "get": {
        "operationId": "getCountryById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Method for getting student's country by his/her id",
        "tags": [
          "Operations on students"
        ]
      }
    },
    "/api/v1/student/regionsByCountry/{studentId}": {
      "get": {
        "operationId": "getRegionsByStudentId",
        "parameters": [
          {
            "in": "path",
            "name": "studentId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/hal+json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RegionAndSubregionDTO"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Method for getting students' regions",
        "tags": [
          "Operations on students"
        ]
      }
    }

  },
  "servers": [
    {
      "description": "Generated server url",
      "url": "http://localhost:8090"
    }
  ]
}